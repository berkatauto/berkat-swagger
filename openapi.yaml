openapi: 3.0.3
info:
  title: Berkat Auto - Dokumen API Cloud Function
  description: >-
    Swagger ini adalah dokumentasi dan uji coba API untuk aplikasi website Berkat Auto.
  termsOfService: https://github.com/berkatauto/
  contact:
    email: adam.ghafara.job@gmail.com
  license:
    name: Berkat Auto Backend Package
    url: https://github.com/berkatauto/berkat-bepkg
  version: v1.0.0
externalDocs:
  description: Repo GCF
  url: https://github.com/berkatauto/berkat-gcf
servers:
  - url: https://asia-southeast2-spheric-entity-401507.cloudfunctions.net/
tags:
  - name: CRUD
    description: Data Article
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://github.com/berkatauto/berkat-gcf/ArticlePost
  - name: ACCOUNT
    description: Account APIs with Using Tokenization
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://github.com/berkatauto/berkat-gcf/signIn
paths:
  /articlepost:
    post:
      tags:
        - CRUD
      summary: Post Articles
      description: Post New Articles
      operationId: postArticle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Articles'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Articles'
        '400':
          description: Invalid status value
  /getarticle:
    get:
      tags:
        - CRUD
      summary: Get Article
      description: Get Article
      operationId: getArticle
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Articles'
        '400':
          description: Invalid status value
  /updatearticle:
    post:
      tags:
        - CRUD
      summary: Update Article
      description: Update Article
      operationId: updateArticle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Articles'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Articles'
        '405':
          description: Invalid input
  /articledelete:
    delete:
      tags:
        - CRUD
      summary: Delete Article
      description: Delete Article
      operationId: deleteArticle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteArticle'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteMessage'
        '405':
          description: Invalid input
  /signin:
    post:
      tags:
        - ACCOUNT
      summary: Login get Token
      description: Login and Get User Token
      operationId: authService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Auth'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '405':
          description: Invalid input
      security:
        - token:
            - write:apiKey
            - read:apiKey
  /signup:
    post:
      tags:
        - ACCOUNT
      summary: signUp to Berkat Auto
      description: signUp Function
      operationId: signUpFunc
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUp'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignUpResult'
        '405':
          description: Invalid input
components:
  schemas:
    Articles:
      type: object
      properties:
        author:
          type: string
          example: Test Author
        title:
          type: string
          example: Contoh Judul
        category:
          type: string
          example: Belajar Otomotif
        tags:
          type: object
          properties:
            tag:
              type: string
              example: Mobil, Motor, Truck, Bus, Sparepart, Aksesoris, Velg, Ban, Oli, Jasa
        content:
          type: object
          properties:
            paragraph:
              type: string
              example: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque quis nulla a dolor dapibus euismod et non eros. Nullam cursus augue vel risus tincidunt consectetur. Cras eleifend risus eget leo fringilla, a porta tellus condimentum. Phasellus dapibus neque eu orci pharetra dignissim. Cras et sollicitudin lectus. Sed vestibulum est rhoncus vehicula faucibus. Phasellus efficitur, risus nec consequat consectetur, quam ligula convallis quam, eu commodo lacus neque non diam. Nam ac ante vestibulum, accumsan justo nec, laoreet orci. Morbi et ligula pharetra, consequat orci quis, euismod quam. Nunc lobortis dui in ultricies sagittis. Interdum et malesuada fames ac ante ipsum primis in faucibus. Curabitur placerat nibh ac purus consequat, ac hendrerit libero tempus. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Morbi vehicula sapien non accumsan faucibus. Cras pulvinar, mi non semper molestie, nisi metus imperdiet arcu, non viverra elit ex vel odio. Proin ullamcorper ipsum vel accumsan rutrum. Nullam mattis dui sit amet mauris convallis, sit amet molestie dolor convallis. Aenean pulvinar neque sed sapien placerat maximus. Proin rutrum, tellus at vehicula suscipit, est nibh mollis urna, vel congue urna orci a urna. Quisque nec eleifend sem, id accumsan erat. Nunc sagittis leo eget tortor ultrices vehicula nec sit amet sapien. Aenean posuere a turpis vel posuere. Vivamus bibendum, eros et gravida vehicula, purus erat finibus tellus, eu faucibus orci purus a est. Phasellus tempor nibh a tortor fringilla, vitae bibendum risus volutpat. Fusce quis elit lacus. Praesent in sollicitudin neque, sit amet aliquam sapien.
            image:
              type: string
              example: NII
            video_link:
              type: string
              example: NVI
            date:
              type: string
              example: date here
    DeleteArticle:
      type: object
      properties:
        title:
          type: string
          example: Contoh Judul
    DeleteMessage:
      type: string
      example: Deleting successful!
    SignUp:
      type: object
      properties:
        fullname:
          type: string
          example: Contoh Admin
        username:
          type: string
          example: admin
        password:
          type: string
          example: 12345
        journal_bool:
          type: boolean
          example: true
        role:
          type: string
          example: admin
    SignUpResult:
      type: object
      properties:
        fullname:
          type: string
          example: Contoh Admin
        username:
          type: string
          example: admin
        password:
          type: string
          example: 12345
        journal_bool:
          type: boolean
          example: true
        role:
          type: string
          example: admin
    Auth:
      type: object
      properties:
        username:
          type: string
          example: admin
        password:
          type: string
          example: 12345
    AuthResponse:
      type: object
      properties:
        status:
          type: true
          example: false
        token:
          type: string
          example: v4.public.1203857r1y327905ry128
        message:
          type: string
          example: login success
  requestBodies:
    AuthReq:
      description: Request Authentication
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Auth'
    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AuthResponse'
  securitySchemes:
    token:
      type: apiKey
      name: token
      in: header
